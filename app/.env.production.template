# public / shared config
NODE_ENV=production
## We use `REACT_APP_SERVER_SCHEME` here instead of `REACT_APP_IS_SECURE` as
## the public.html page uses it to render the link to the `/api/v1/bootstrap`
## resources.
## Additional note, on development and test, these values must be the same as
## the PRIVATE_SERVER_CONFIG_x environment variables
REACT_APP_SERVER_SCHEME=https
REACT_APP_SERVER_HOST=yourdomain.com
REACT_APP_SERVER_PORT=443
REACT_APP_APP_ID=your_app
REACT_APP_APP_NAME="Your App"
REACT_APP_SUPPORT_EMAIL=support@yourdomain.com
REACT_APP_COMPANY_NAME="Your Company Ltd"
REACT_APP_MIN_PASSWORD_LENGTH=7
REACT_APP_LOG=5

# private server only config
PRIVATE_SERVER_CONFIG_SCHEME=http
PRIVATE_SERVER_CONFIG_HOST=127.0.0.1
PRIVATE_SERVER_CONFIG_PORT=4000
PRIVATE_SERVER_CONFIG_DB_DATABASE=main_data
PRIVATE_SERVER_CONFIG_DB_USERNAME=postgres
PRIVATE_SERVER_CONFIG_DB_PASSWORD=some_long_random_string
PRIVATE_SERVER_CONFIG_DB_ADDRESS=localhost
PRIVATE_SERVER_CONFIG_DB_PORT=5432
PRIVATE_SERVER_CONFIG_DB_DIALECT=postgres
PRIVATE_SERVER_CONFIG_SEND_EMAIL=0
PRIVATE_SERVER_CONFIG_LOG_DB=1
PRIVATE_SERVER_CONFIG_LOG_APP_SERVER_DIRECTORY=/var/log/web_server/

## If the servers where on a private network with a load balancer on a seperate
## machine in front of the web server machines then the nginx on those web server
## machines would bind to the private ip address of the machine and on port 80.
## The IP address will be different between production and staging hence it needs
## to live in the .env file.
PRIVATE_IP_WEB_A=127.0.0.1
PRIVATE_PORT_WEB_A=8005

# Generated from create_env.js
# Generate your own by running
#    cd add
#    npm run build-back
#    export NODE_ENV=production && node compiled_all/bin/create_env.js
PRIVATE_SERVER_CONFIG_ENCRYPTION_PASSWORD=some_long_random_string
